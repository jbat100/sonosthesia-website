
.container

    p.quotation (Under construction...)

    h1 Interactive Digital Arts

    p The idea of interactive digital art is not new. It essentially emerged as soon as computer technology allowed it to, continuing a tradition of audio/visual art which preceded it in spirit but was neither digital nor interactive. It was elegantly formulated by Golan Levin on the #[a(href="http://acg.media.mit.edu/people/golan/aves/") Audiovisual Environment Suite] website, a project which goes back to the year 2000.

    div.container
        p.quotation "The Audiovisual Environment Suite [...] allows people to create and perform abstract animation and synthetic sound in real time. [It] attempts to design an interface which is supple and easy to learn, yet can also yield interesting, infinitely variable and personally expressive performances in both the visual and aural domains. Ideally, these systems permit their interactants to engage in a flow state of pure experience. [It is] built around the metaphor of an inexhaustible and dynamic audiovisual substance, which is freely deposited and controlled by the user's gestures. Each instrument situates this substance in a context whose free-form structure inherits from the visual language of abstract painting and animation. The use of low-level synthesis techniques permits the sound and image to be tightly linked, commensurately malleable, and deeply plastic."

    p An extended discussion of the audio/visual arts tradition as well as considerations for a new interface metaphor for digital media, and descriptions of substantial list of important works in the domain can be read in Golan Levin's #[a(href="http://www.flong.com/texts/publications/thesis/") Masters Thesis]. This vision is central to Sonosthesia. We aim to create inter-modal control flows where content generated in different forms of media, by different software components, affect each other in real-time, as well as being influenced by user input in powerfully expressive ways. As computer technology and interaction techniques evolve the possibilities for the real-time creation of complex audio/visual content grow with it, and although a number of projects have since continued Golan's work, opportunities provided by a new generation of tools seem to be yet untapped.


    h1 Sonosthesia Terminology

    ul
        li A #[b parameter] is an abstraction for a controllable. Examples would include cutoff frequency, texture coordinates, timbral attributes, rotation angle, color components. They are typically floats but can be vectors of floats which can be useful especially for description (spectral bins for example).
        li An #[b object] is an abstraction for an entity which exposes a set of parameters. Examples would include a MIDI note (pitch, velocity...).
        li An #[b action] is an abstraction for an action associated with an object. Actions are a higher level concept than #[b parameters]. They can trigger time-varying changes in parameters. Actions can have associated #[b descriptors], for example a #[i jump] action could have a #[i height] and #[b direction].
        li A #[b channel] is a static object (it exposes parameters and actions but is always there, never created nor destroyed) and creates and destroys dynamic object instances. The typical example would be a MIDI channel which creates and destroys MIDI note objects. Both the MIDI notes and the MIDI channel expose parameters.
        li A #[b component] is a grouping of channel typically but not necessarily held within a software document (a DAW project or a Unity scene for example).

    h1 Standards for Cross-Domain Mappings

    p The core of Sonosthesia is to create mappings between different domains. Control pipelines of arbitrary complexity can be put in place, by mapping control streams from one component/domain to the next. At each step control stream can be piped into another component, or several, or looped back to the first component, creating an infinite control loop. Defining how these mappings are made is a crucial aspect of the project. Striking the right balance between simplicity, flexibility and domain-specific semantics is key.


    h2 Contacts as Sound Synthesis Controllers

    h2 Visual Attributes as Cues for Sonic Properties

    h2 Sound Analysis Data as Generic Controller

